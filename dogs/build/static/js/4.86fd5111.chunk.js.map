{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,uHCmDjGC,UAhDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACVC,IAAMC,SAAS,IADL,mBAC7BC,EAD6B,KACtBC,EADsB,OAEVH,IAAMC,SAAS,GAFL,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAmBpC,OAfAL,IAAMM,WAAU,WACd,IAAMC,EAAYR,EAAKS,KAAI,SAACC,GAC1B,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAInBT,EACEN,EAAKS,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAGlEd,EAASI,KACR,CAACR,IAGF,0BAASmB,UAAS,UAAKC,IAAOjB,MAAZ,cAAlB,UACE,qBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,WAA1C,SACE,0CAAahB,OAEf,qBAAKc,UAAS,UAAKC,IAAOC,WAA1B,SACE,cAAC,IAAD,CACErB,KAAMG,EACNmB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL5B,KAAM,CAAE6B,YAAa,GAAKC,OAAQ,OAAQC,YAAa,GACvDC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAMd,qBAAKf,UAAS,UAAKC,IAAOC,WAA1B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQnC,KAAMG","file":"static/js/4.86fd5111.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__6vdU8\",\"graphItem\":\"UserStatsGraphs_graphItem__2KPL_\",\"total\":\"UserStatsGraphs_total__21l0a\"};","import React from \"react\";\r\nimport styles from \"./UserStatsGraphs.module.css\";\r\nimport { VictoryPie, VictoryChart, VictoryBar } from \"victory\";\r\n\r\nconst UserStatsGraphs = ({ data }) => {\r\n  const [graph, setGraph] = React.useState([]);\r\n  const [total, setTotal] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const graphData = data.map((item) => {\r\n      return {\r\n        x: item.title,\r\n        y: Number(item.acessos),\r\n      };\r\n    });\r\n\r\n    setTotal(\r\n      data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b),\r\n    );\r\n\r\n    setGraph(graphData);\r\n  }, [data]);\r\n\r\n  return (\r\n    <section className={`${styles.graph} animeLeft`}>\r\n      <div className={`${styles.total} ${styles.graphItem}`}>\r\n        <p>Acessos: {total}</p>\r\n      </div>\r\n      <div className={`${styles.graphItem}`}>\r\n        <VictoryPie\r\n          data={graph}\r\n          innerRadius={50}\r\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\r\n          style={{\r\n            data: { fillOpacity: 0.9, stroke: \"#fff\", strokeWidth: 2 },\r\n            labels: {\r\n              fontSize: 14,\r\n              fill: \"#333\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${styles.graphItem}`}>\r\n        <VictoryChart>\r\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\r\n        </VictoryChart>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserStatsGraphs;\r\n"],"sourceRoot":""}